#!/bin/sh

# Slackware build script for boost

# Copyright 2007 Eric Hameleers <alien@slackware.com>
# Copyright 2007 Heinz Wiesinger
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# bjam-build system mostly taken from SlackBuild by Eric Hameleers 
# Script modified by Robby Workman - no copyright claims or added terms

VERSION=1_35_0
ARCH=${ARCH:-i486}
BUILD=${BUILD:-1}

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-boost

ICU=${ICU:-YES}
PKG_VERSION=$(echo $VERSION | tr _ .)	# Leave this alone

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
fi

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf boost_$VERSION
tar xvf $CWD/boost_$VERSION.tar.bz2
cd boost_$VERSION || exit 1
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

if [ "$ICU" = "YES" ]; then
    do_icu="-sICU_PATH=/usr"
else
    do_icu=""
fi

# This is the python we build against:
PYTHON_VERSION=$(python -c 'import sys; print sys.version[:3]')
PYTHON_FLAGS="-sPYTHON_ROOT=/usr -sPYTHON_VERSION=$PYTHON_VERSION"

# This fixes a critical bug that affects the construction of 
# Boost.Function objects in a multi-threaded context.
#zcat $CWD/boost-1_34_1-function-bugfix.diff.gz | patch -p1 || exit 1

# First build bjam, the boost build system:
cd tools/jam/src
  ./build.sh gcc
cd -

BJAM=$(find tools/jam/src/ -name bjam -a -type f)

# Create build subdirectory
mkdir obj

# Next, we build boost using bjam
$BJAM \
  release \
  "-sBUILD=<optimization>speed <inlining>full <threading>single/multi" \
  "-sNO_COMPRESSION=0" \
  "-sZLIB_INCLUDE=/usr/include" \
  "-sZLIB_LIBPATH=/usr/lib" \
  "-sBZIP2_INCLUDE=/usr/include" \
  "-sBZIP2_LIBPATH=/usr/lib" \
  --toolset=gcc \
  --layout=system \
  --builddir=obj \
  --prefix=/usr \
  $PYTHON_FLAGS \
  $do_icu \
  stage

# And then install boost..
mkdir -p $PKG/usr/{bin,lib,include}

$BJAM \
  release \
  --toolset=gcc \
  --layout=system \
  --builddir=obj \
  --prefix=$PKG/usr \
  $PYTHON_FLAGS \
  $do_icu \
  install

# Install the bjam binary:
cp -a $BJAM $PKG/usr/bin

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

mkdir -p $PKG/usr/doc/boost-$PKG_VERSION
cp -a LICENSE_1_0.txt README $PKG/usr/doc/boost-$PKG_VERSION

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n /tmp/boost-$PKG_VERSION-$ARCH-$BUILD.tgz
